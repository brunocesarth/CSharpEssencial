List<T> - Find(), FindLast(), FindIndex(), FindLastIndex(), FindAll()

O método Find retorna o primeiro elemento que corresponde ao predicado fornecido.
O método FindLast retorna o último elemento que corresponde ao predicado fornecido.
O método FindIndex retorna o índice do primeiro elemento que corresponde ao predicado fornecido. Ele retorna -1 se não houver correspondência encontrada.
O método FindLastIndex retorna o índice do último elemento que corresponde ao predicado fornecido. Ele retorna -1 se não houver correspondência encontrada.
O método FindAll recupera todos os elementos que correspondem às condições definidas pelo predicado especificado.

Um predicado é uma função/método de argumento único que retorna um valor booleano.

List<T> - Find()
Sintaxe: public T? Find(Predicate<T> match);

List<string> frutas = new() {
    "Uva","Banana", "Pera","Maça","Abacate","Laranja", "Morango"
};

var fruta1 = frutas.Find(Procura);

static bool Procura (string item)
{
    return item.StartsWith('n');
}

Predicado é uma função que a partir de uma expressão retorna verdadeiro ou falso conforme á lógica da expressão definida na função.

Ao invés de criar uma função que retorna true ou false podemos usar uma expressão lambda.

Uma expressão lambda é uma função anônima

Para criar uma expressão lambda, devemos especificar:
- os parâmetros de entrada no lado esquerdo do operador lambda (=>)
- e definir a expressão ou o bloco de instruções do lado direito do operador lambda.
    Ex: x=> x*x     Define um parâmetro chamado x e retorna o valor de x ao quadrado

var resultado = frutas.Find(f => f.Contains('n'))

