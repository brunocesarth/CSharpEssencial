List<T> - Definição
A coleção List<T> é uma coleção de objetos fortemente tipados que podem ser acessados usando um índice que inicia em zero, e possui métodos para classificar, pesquisar, modificar e manipular listas.

Esta coleção é a versão genérica da coleção ArrayList, sendo equivalente a ela, e esta presente no namespace System.Collections.Generic.

A classe List<T> pode ser usada para criar uma coleção de tipos diferentes, onde T representa o tipo do objeto que pode ser inteiro, string, double, etc., e também pode ser um tipo complexo como uma classe definida pelo usuário.

List<T> | | | | | | |
		 0 1 2 3 4 5


################################################################################################
List<T> - Características
Uma List<T> pode conter elementos do tipo especificado por T,fornece verificação de tipo em tempo de compilação e não executa boxing-unboxing porque é genérica.

Os elementos podem ser adicionados a uma List<T> usando os métodos Add(), AddRange(), Insert() e InsertRange() ou usando a sintaxe de inicializados de coleção.

Uma List<T> é uma estrutura dinâmica que pode ser redimensionada.

Uma List<T> inicia vazia e seus elementos são alocados sob demanda.

Uma List<T> como Arrays e ArrayList são tipo de referência: uma variável refere-se ao objeto real, que deve ser instanciado na memória HEAP. 

################################################################################################
List<T> - Declaração, instanciação e inclusão de elementos
Para criar uma List<T> temos que especificar o parâmetro de tipo T para definir o tipo dos elementos que desejamos armazenar, usar a palavra-chave new e a seguir podemos usar o método Add para incluir elementos ou podemos usar os inicializadores de coleção para criar uma List<T> em uma única etapa.

List<string> lista;
lista = new List<string>();
Count = 0
Capacity = 0

List<int> lista1 = new List<int>();
var lista2 = new List<float>();
List<double> lista3 = new();
Count = 0
Capacity = 0

List<string> lista = new();
lista.Add("Paulo");
lista.Add("Maria");
lista.Add("Bia");
lista.Add("Pedro");
Count = 4
Capacity = 4
var lista = new List<string>()
{
	"Paulo", "Maria", "Bia", "Pedro"
};
Usando inicializador de coleção
