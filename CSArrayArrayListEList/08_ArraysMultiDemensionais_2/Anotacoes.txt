Array bidimensional - Laço for
Podemos usar um laço for para ler e recuperar os valores dos elementos de um array bidimensional definindo um laço for para cada uma das dimensões do array.
Para obter as dimensões do array usamos o método GetLength(n), onde a primeira dimensão inicia com zero(n=0),

int[,] n = new int[2,3] {{1,4,2},{3,,6,8}};

		0		1		2
0	|	1	|	4	|	2	|		---->	|	n[0,0]	|	n[0,1]	|	n[0,2]	|		n[i,j]
1	|	3	|	6	|	8	|				|	n[1,0]	|	n[1,1]	|	n[1,2]	|


for(int i = 0; i < n.GetLenght(0); i++)			---->	n.GetLength(0) => 2 (linhas) -> i
{
	for(int j = 0; j < n.GetLenght(1); j++)		---->	n.GetLength(1) => 3 (colunas) -> j
	{
		Console.Write($"{n[i,j]} ");			---->	1 4 2 3 6 8
	}
} 

########################################################################################################################

Array bidimensional - laço foreach
Em arrays de duas dimensões, a instrução foreach processa elementos em ordem crescente de índice, começando com o índice 0 e terminando com índice com valor Length -1
Os elementos são percorridos de modo a que os índices da dimensão mais à direita são aumentados primeiro e, em seguida, os da próxima dimensão à esquerda, e assim por diante seguindo para a esquerda.

int[,] numeros =
{
	{1,2,3},
	{4,5,6}
};

foreach(var n in numeros)
{
	Console.Write($"{n} ");
}